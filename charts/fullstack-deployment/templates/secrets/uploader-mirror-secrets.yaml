{{- $namespace := default $.Release.Namespace $.Values.global.namespaceOverride }}
{{- $previous := lookup "v1" "Secret" $namespace "uploader-mirror-secrets" }}
{{- $minio_accessKey := randAlpha 10 -}}
{{- $minio_secretKey := randAlpha 10 -}}
{{- $minio_url := printf "http://%s-hl:9000" (index $.Values "minio-server" "tenant" "name") -}}
apiVersion: v1
kind: Secret
metadata:
  name: minio-secrets
  namespace: {{ $namespace }}
type: Opaque
data:
{{- if and ((($previous).data).S3_ACCESS_KEY) ((($previous).data).S3_SECRET_KEY) }}
  config.env: {{ b64enc (printf "export MINIO_ROOT_USER=%s\nexport MINIO_ROOT_PASSWORD=%s" (b64dec $previous.data.S3_ACCESS_KEY) (b64dec $previous.data.S3_SECRET_KEY)) }}
{{- else }}
  config.env: {{ b64enc (printf "export MINIO_ROOT_USER=%s\nexport MINIO_ROOT_PASSWORD=%s" $minio_accessKey $minio_secretKey) }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: uploader-mirror-secrets
type: Opaque
data:
{{- if ((($previous).data).S3_ACCESS_KEY) }}
  S3_ACCESS_KEY: {{ $previous.data.S3_ACCESS_KEY }}
  HEDERA_MIRROR_IMPORTER_DOWNLOADER_SOURCES_0_CREDENTIALS_ACCESSKEY: {{ $previous.data.S3_ACCESS_KEY }}
{{- else }}
  S3_ACCESS_KEY: {{ b64enc $minio_accessKey }}
  HEDERA_MIRROR_IMPORTER_DOWNLOADER_SOURCES_0_CREDENTIALS_ACCESSKEY: {{ b64enc $minio_accessKey }}
{{- end }}
{{- if ((($previous).data).S3_SECRET_KEY) }}
  S3_SECRET_KEY: {{ $previous.data.S3_SECRET_KEY }}
  HEDERA_MIRROR_IMPORTER_DOWNLOADER_SOURCES_0_CREDENTIALS_SECRETKEY: {{ $previous.data.S3_SECRET_KEY }}
{{- else }}
  S3_SECRET_KEY: {{ b64enc $minio_secretKey }}
  HEDERA_MIRROR_IMPORTER_DOWNLOADER_SOURCES_0_CREDENTIALS_SECRETKEY: {{ b64enc $minio_secretKey }}
{{- end }}
  # The below keys will be ignored by the uploader side cars
  # These will be used by mirror node to connect to minio
  HEDERA_MIRROR_IMPORTER_DOWNLOADER_SOURCES_0_TYPE: {{ b64enc "S3" }}
  HEDERA_MIRROR_IMPORTER_DOWNLOADER_SOURCES_0_URI: {{ b64enc $minio_url }}
---
