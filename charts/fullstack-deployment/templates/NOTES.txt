Get the name of the envoy gateway system:
  export ENVOY_SERVICE=$(kubectl get svc -n envoy-gateway-system --selector=gateway.envoyproxy.io/owning-gateway-namespace="${NAMESPACE}",gateway.envoyproxy.io/owning-gateway-name=fst -o jsonpath="{.items[0].metadata.name}")

Forward a port on the gateway to a local port:
  kubectl port-forward "svc/${ENVOY_SERVICE}" -n envoy-gateway-system "${LOCAL_PORT}":"${GATEWAY_PORT}" &

Some examples, that for convenience, use the same local port as that on the gateway:

To access the Hedera Mirror Node Explorer locally (port 8888 on the gateway):
  kubectl port-forward "svc/${ENVOY_SERVICE}" -n envoy-gateway-system 8888:8888 &
  open http://127.0.0.1:8888

To access the GRPC port of node 2 (starting port 52000 for node 0 on the gateway):
  kubectl port-forward "svc/${ENVOY_SERVICE}" -n envoy-gateway-system 52002:52002 &

To access the GRPC secure (TLS) port of node 1 (starting port 53000 for node 0 on the gateway):
  kubectl port-forward "svc/${ENVOY_SERVICE}" -n envoy-gateway-system 53001:53001 &

To access the gossip port of node 0 (starting port 51000 for node 0 on the gateway):
  kubectl port-forward "svc/${ENVOY_SERVICE}" -n envoy-gateway-system 51000:51000 &

To access the GRPC web port of node 5 (starting port 18000 for node 0 on the gateway):
  kubectl port-forward "svc/${ENVOY_SERVICE}" -n envoy-gateway-system 18005:18005 &
