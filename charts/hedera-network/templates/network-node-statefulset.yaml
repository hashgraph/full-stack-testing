
{{ range $index, $node := $.Values.hedera.nodes }}
{{- $cloud := $.Values.cloud }}
{{- $recordStream := $node.sidecars.recordStreamUploader }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: network-{{ $node.name }}
  labels:
    app: network-{{ $node.name }}
spec:
  replicas: 1
  serviceName: "network-{{ $node.name }}"
  selector:
    matchLabels:
      app: network-{{ $node.name }}
  template:
    metadata:
      labels:
        app: network-{{ $node.name }}
        fullstack.hedera.com/type: network-node
    spec:
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
      volumes:
        - name: hgcapp-storage # change me
          emptyDir: {}
        {{- if $node.sidecars.otel.enabled }}
        - name: otel-collector-config
          configMap:
            name: otel-collector-config
        {{- end }}
      initContainers:
      - name: init-container
        image: {{ $.Values.infrastructure.docker.images.root }}
        command: [ "/bin/sh", "-c", "mkdir /opt/hgcapp/hedera-backups /opt/hgcapp/accountbalance /opt/hgcapp/events /opt/hgcapp/recordstream /opt/hgcapp/sidecar /opt/hgcapp/recordstream/uploader-stats/"  ]
        {{- include "hedera.security.context" . | nindent 8}}
        volumeMounts:
          - name: hgcapp-storage
            mountPath: /opt/hgcapp/
      containers:
      - name: root-container
        image: {{ $.Values.infrastructure.docker.images.root }}
        securityContext: # need to run as root with privileged mode
          runAsUser: 0
          runAsGroup: 0
          privileged: true
        resources:
          {{- toYaml $node.resources | nindent 10 }}
        volumeMounts:
          - name: hgcapp-storage
            mountPath: /opt/hgcapp/
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      {{- if $recordStream.enabled }}
      # Record Stream Uploader
      - name: {{ $recordStream.nameOverride | default "record-stream-uploader" }}
        image: "{{ $recordStream.image.registry }}/{{ $recordStream.image.repository }}:{{ $recordStream.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{$recordStream.image.pullPolicy}}
        {{- include "hedera.security.context" $ | nindent 8 }}
        command:
          - /usr/bin/env
          - python3.7
          - /usr/local/bin/mirror.py
          - --linux
          - --watch-directory
          - /opt/hgcapp/recordstream
          - --csv-stats-directory
          - /opt/hgcapp/recordstream/uploader-stats
        volumeMounts:
          - name: hgcapp-storage
            mountPath: /opt/hgcapp/
        env:
          - name: DEBUG
            value: "{{ $recordStream.config.debug }}"
          - name: REAPER_ENABLE
            value: "{{ $recordStream.config.reaper.enable }}"
          - name: REAPER_MIN_KEEP
            value: "{{ $recordStream.config.reaper.minKeep }}"
          - name: REAPER_INTERVAL
            value: "{{ $recordStream.config.reaper.interval }}"
          - name: REAPER_DEFAULT_BACKOFF
            value: "{{ $recordStream.config.reaper.defaultBackoff }}"
          - name: STREAM_FILE_EXTENSION
            value: "rcd"
          - name: STREAM_SIG_EXTENSION
            value: "rcd_sig"
          - name: STREAM_EXTENSION
            value: {{ $recordStream.config.compression | ternary "rcd.gz" "rcd" }}
          - name: RECORD_STREAM_COMPRESSION
            value: "{{ $recordStream.config.compression }}"
          - name: RECORD_STREAM_SIDECAR
            value: "{{ $recordStream.config.sidecar }}"
          - name: SIG_REQUIRE
            value: "{{ $recordStream.config.signature.require }}"
          - name: SIG_PRIORITIZE
            value: "{{ $recordStream.config.signature.prioritize }}"
          - name: SIG_EXTENSION
            value: "rcd_sig"
          - name: BUCKET_PATH
            value: "/recordstream"
          - name: BUCKET_NAME
            value: "{{ $cloud.buckets.streamBucket }}"
          - name: S3_ENABLE
            value: "{{ $cloud.s3.enabled }}"
          - name: GCS_ENABLE
            value: "{{ $cloud.gcs.enabled }}"
        envFrom:
          - secretRef:
              name: uploader-mirror-secrets
      {{- end }}
{{ end }}
