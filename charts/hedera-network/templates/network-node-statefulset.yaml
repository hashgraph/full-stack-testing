
{{ range $index, $node := $.Values.hedera.nodes }}
{{- $cloud := $.Values.cloud }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: network-{{ $node.name }}
  labels:
    app: network-{{ $node.name }}
spec:
  replicas: 1
  serviceName: "network-{{ $node.name }}"
  selector:
    matchLabels:
      app: network-{{ $node.name }}
  template:
    metadata:
      labels:
        app: network-{{ $node.name }}
        fullstack.hedera.com/type: network-node
    spec:
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
      volumes:
        - name: hgcapp-storage # change me
          emptyDir: {}
        {{- if $node.sidecars.otelCollector.enabled }}
        - name: otel-collector-config
          configMap:
            name: otel-collector-config
        {{- end }}
      initContainers:
      # Init Container
      - name: init-container
        image: {{ $.Values.infrastructure.docker.images.root }}
        command: [ "/bin/sh", "-c", "mkdir /opt/hgcapp/hedera-backups /opt/hgcapp/accountbalance /opt/hgcapp/events /opt/hgcapp/recordstream /opt/hgcapp/sidecar /opt/hgcapp/recordstream/uploader-stats/"  ]
        {{- include "hedera.security.context" . | nindent 8}}
        volumeMounts:
          - name: hgcapp-storage
            mountPath: /opt/hgcapp/
      containers:
      # Root Container
      - name: root-container
        image: {{ $.Values.infrastructure.docker.images.root }}
        securityContext: # need to run as root with privileged mode
          runAsUser: 0
          runAsGroup: 0
          privileged: true
        resources:
          {{- toYaml $node.resources | nindent 10 }}
        volumeMounts:
          - name: hgcapp-storage
            mountPath: /opt/hgcapp/
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      # Sidecars
      {{- include "sidecars" (dict "node" $node "cloud" $.Values.cloud "chart" $.Chart ) | nindent 6 }}
{{ end }}
