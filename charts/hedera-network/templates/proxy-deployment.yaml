{{ range $nodeConfig := ($.Values.hedera.nodes) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-{{ $nodeConfig.name }}
spec:
  replicas: {{ $.Values.haproxyReplicaCount }}
  selector:
    matchLabels:
      app: haproxy-{{ $nodeConfig.name }}
  template:
    metadata:
      labels:
        app: haproxy-{{ $nodeConfig.name }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: haproxy-config-{{ $nodeConfig.name }}
        - name: ofac-volume
          configMap:
            name: ofac-config
      containers:
      - name: haproxy
        image: {{ $.Values.infrastructure.docker.registry }}/{{ $.Values.infrastructure.docker.images.haproxy }}
        imagePullPolicy: Always
        volumeMounts:
          - name: config-volume
            # https://hub.docker.com/_/haproxy/
            mountPath: /usr/local/etc/haproxy
          - name: ofac-volume
            mountPath: /var/opt/ofac/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy-{{ $nodeConfig.name }}
spec:
  replicas: {{ $.Values.envoyProxyReplicaCount }}
  selector:
    matchLabels:
      app: envoy-proxy-{{ $nodeConfig.name }}
  template:
    metadata:
      labels:
        app: envoy-proxy-{{ $nodeConfig.name }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: envoy-proxy-config-{{ $nodeConfig.name }}
      containers:
      - name: envoy-proxy
        image: {{ $.Values.infrastructure.docker.registry }}/{{ $.Values.infrastructure.docker.images.envoyproxy }}
        imagePullPolicy: Always
        volumeMounts:
          - name: config-volume
            # https://www.envoyproxy.io/docs/envoy/v1.26.2/start/docker
            mountPath: /etc/envoy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: json-rpc-relay-{{ $nodeConfig.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: json-rpc-relay-{{ $nodeConfig.name }}
  template:
    metadata:
      labels:
        app: json-rpc-relay-{{ $nodeConfig.name }}
    spec:
      containers:
      - name: json-rpc-relay
        image: {{ $.Values.infrastructure.docker.registry }}/{{ $.Values.infrastructure.docker.images.jsonrpcrelay }}
        imagePullPolicy: Always
{{- end }}