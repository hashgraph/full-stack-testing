receivers:
  otlp:
    protocols:
      grpc:
  hostmetrics:
    collection_interval: "15s"
    scrapers:
      cpu:
      disk:
      load:
      filesystem:
      memory:
      network:
      paging:
      processes:

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      source: p-{{ default "otel-collector" .otelDefaults.nameOverride }} # PromQL: {source="p-otel-collector"}
  {{- if eq .otelDefaults.prometheusRemoteWrite.enable "true" }}
  prometheusremotewrite:
    endpoint: "{{ .otelDefaults.prometheusRemoteWrite.endpoint }}"
    tls:
      insecure: true
    external_labels:
      source: prw-{{ default "otel-collector" .otelDefaults.nameOverride }} # PromQL: {source="prw-otel-collector"}
  {{- end }}
#  logging:
#    verbosity: detailed
#    sampling_initial: 5


#  jaeger:
#    endpoint: jaeger-all-in-one:14250
#    tls:
#      insecure: true
#
#  otlp:
#    endpoint: tempo:4317
#    tls:
#      insecure: true

processors:
  batch:
extensions:
  health_check:

service:
#  telemetry:
#    logs:
#      level: "debug"
#      development: true
  extensions: [health_check]
  pipelines:
    #traces:
    #  receivers: [otlp]
    #  processors: [batch]
    #  exporters: [logging, otlp, jaeger]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [batch]
      exporters: 
         - prometheus
         {{- if eq .otelDefaults.prometheusRemoteWrite.enable "true" }}
         - prometheusremotewrite
         {{- end }}
#      exporters: [logging, prometheus{{ if eq .otelDefaults.prometheusRemoteWrite.enable "true" }}, prometheusremotewrite{{ end }}]
