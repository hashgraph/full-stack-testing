# WARNING: Use double quotes for all values. This is because we need to be careful about booleans.

# cloud configuration
cloud:
  minio:
    enable: true
  buckets:
    streamBucket: "fst-streams"
    backupBucket: "fst-backups"
  s3:
    enable: "true"
  gcs:
    enable: "true"

# telemetry configurations
telemetry:
  prometheus:
    svcMonitor:
      enable: "true"

# reduce default termination grace period
terminationGracePeriodSeconds: 10

# helm test container
tester:
  image:
    registry: "ghcr.io"
    repository: "hashgraph/full-stack-testing/kubectl-bats"
    tag: "" # this should be empty since we want the default behavior of $.Chart.appVersion to apply
    pullPolicy: "IfNotPresent"
  resources: {}

# gateway-api configuration
gatewayApi:
  gatewayClass:
    name: "fst"
    enable: "true"
    controllerName: "gateway.envoyproxy.io/gatewayclass-controller"
#    controllerName: "haproxy-ingress.github.io/controller"
  gateway:
    name: "fst"
    enable: "true"
  route:
    hostname: "{{ .node.name }}.fst.local"

# default settings for a single node
# This default configurations can be overridden for each node in the hedera.nodes section.
defaults:
  resources:
    requests:
      cpu: 1
      memory: 2G
    limits:
      cpu: 1
      memory: 2G
  root: # root container
    image:
      registry: "ghcr.io"
      repository: "hashgraph/full-stack-testing/ubi8-init-java17"
      tag: "" # this should be empty since we want the default behavior of $.Chart.appVersion to apply
      pullPolicy: "IfNotPresent"
    resources: {}
  haproxy:
    enable: "true"
    nameOverride: "haproxy"
    image:
      registry: "docker.io"
      repository: "haproxy"
      tag: "2.4-alpine"
      pullPolicy: "IfNotPresent"
    resources: {}
    loadBalancerEnabled: "false"
  envoyProxy:
    enable: "true"
    nameOverride: "envoy-proxy"
    image:
      registry: "docker.io"
      repository: "envoyproxy/envoy"
      tag: "v1.21.1"
      pullPolicy: "IfNotPresent"
    resources: {}
    loadBalancerEnabled: "false"
  sidecars:
    recordStreamUploader:
      enable: "true"
      nameOverride: "record-stream-uploader"
      image:
        registry: "gcr.io"
        repository: "hedera-registry/uploader-mirror"
        tag: "1.3.0"
        pullPolicy: "IfNotPresent"
      config:
        debug: "true"
        compression: "true"
        sidecar: "true"
        reaper:
          enable: "true"
          minKeep: 1
          interval: 1
          defaultBackoff: 1
        signature:
          require: "true"
          prioritize: "true"
      resources: {}
    eventStreamUploader:
      enable: "true"
      nameOverride: "event-stream-uploader"
      image:
        registry: "gcr.io"
        repository: "hedera-registry/uploader-mirror"
        tag: "1.3.0"
        pullPolicy: "IfNotPresent"
      config:
        debug: "true"
        compression: "true"
        reaper:
          enable: "true"
          minKeep: 1
          interval: 1
          defaultBackoff: 1
        signature:
          require: "true"
          prioritize: "true"
      resources: {}
    accountBalanceUploader:
      enable: "true"
      nameOverride: "account-balance-uploader"
      image:
        registry: gcr.io
        repository: hedera-registry/uploader-mirror
        tag: "1.3.0"  # Defaults to the chart's app version if empty
        pullPolicy: "IfNotPresent"
      config:
        debug: "true"
        compression: "true"
        reaper:
          enable: "true"
          minKeep: 1
          interval: 1
          defaultBackoff: 1
        signature:
          require: "true"
          prioritize: "true"
      resources: {}
    backupUploader:
      enable: "true"
      nameOverride: "backup-uploader"
      image:
        registry: "gcr.io"
        repository: "hedera-registry/hedera-backups"
        tag: "0.6.0"
        pullPolicy: "IfNotPresent"
      config:
        backupBucket: "backup"
      resources: {}
    otelCollector:
      enable: "true"
      nameOverride: ""
      image:
        registry: "docker.io"
        repository: "otel/opentelemetry-collector-contrib"
        tag: "0.72.0"
        pullPolicy: "IfNotPresent"
      resources: {}
      receivers:
        prometheus:
          scrapeTargets: [ 0.0.0.0:9999 ]  # hedera node metrics are exposed at port 9999
          scrapeInterval: 5s
      exporters:
        otlp:
          endpoint: tempo:4317
          tls:
            insecure: true
        prometheus:
          tls:
            insecure: true
        prometheusRemoteWrite:
          enable: "false"
          endpoint: "http://prometheus.default.svc:9090/api/v1/write"
          tls:
            insecure: true

# This configures the minio tenant subchart
# Reference for configuration: https://github.com/minio/operator/blob/master/helm/tenant/values.yaml
minio-server:
  secrets:
    # This secret has [accessKey, secretKey] and will be randomly generated by helm
    existingSecret: minio-secrets
  tenant:
    buckets:
      - name: fst-streams
      - name: fst-backups
    name: minio
    pools:
      - servers: 1
        name: pool-1
        volumesPerServer: 1
        size: 10Gi
    configuration:
      name: minio-secrets
    certificate:
      requestAutoCert: false

hedera-mirror-node:
  # importer is a component of the hedera mirror node
  # config for subchart hedera-mirror/importer
  importer:
    envFrom:
      - secretRef:
          name: mirror-passwords
      - secretRef:
          name: "{{ .Release.Name }}-redis"
      - secretRef:
          name: uploader-mirror-secrets

    # This is a single node address book, node account id = 0.0.3
    # The addressbook.bin file updates will be handled by infrastructure code
    addressBook: CvYGCgwxMC45Ni4xMzEuMzYaBTAuMC4zIswGMzA4MjAxYTIzMDBkMDYwOTJhODY0ODg2ZjcwZDAxMDEwMTA1MDAwMzgyMDE4ZjAwMzA4MjAxOGEwMjgyMDE4MTAwYTEyMDA2ZjI1MjcyNDJjZDdmNTNiOWM0ZmQ1ZGU4NjljNTYyZmY0ZWQ4YTRhYjNhNjI5NjNmM2Y4MTg4YmU3OGYyNThlYWY0MmI5YzNlM2U4ZjU4Njk3MTYwNDEzYmJmNzdhYWRmYWYwZDlmZmQ4Njk4NGIzYmM0ZmI1ZjAyZTExZThhY2I2ZWM2N2U0MjY0YWRkY2ExM2ZmZGU4MzY3NTc4YzI3OTJmYzZhZTMyNmU3YjM0ODU2ZDIzZjAyNTc0ZjVhMjc0ODE1NjAwMzJkNzM3NDlkYWY5ZDMzMmE3ODgzNTEwZTYwZWEyMjI4ODlhM2JmYzNiZWRmMzUwZjNhMzZjYWRhMzliOTQ1MzljNzRmYjgyNjU2NzhiZDVjMTQ4ZmJjOTE2OWFkY2FjZjY3MTliOTJlZThkNDJhOWQyZjg5MjNjYzRmZTNiNDk0YzQ2N2Y0ZTk4YTJhNDllMGEwZWY1YWE0MzNjYmVjNDM4YmFhMjU2YWU2MWEwNTkwY2U0ZTY3ZDBiM2ZlNWYyZGE5YWQ5MGMyNmUyMjlkMjhkNjc5NDU2OTc4ZDY1NzM1NzNlYmI0NjIzOWJhZDRhYmZhYjRmZmU2NGVhNGEzOTdjNmJjNWY3MTc1ZTFhYzM2NDg4ZjE3YzY3NzNiNWVkOTM0MTVlNTdjNDFjNmNkODg2NmRiZDEyMzYwMDYyMzM5Y2IxNTRkODVhZDFhZWNkMWQ3NjBhMDk0MWQ4MGUyOGZlMjQ2MDMzYTg2OGRiYmM4OTc1ZjM2MDQ0MzFmY2U5YWY5MWRjNDI1NDBhYjA0YjFiYmVjMjFmMzVmNzVmMzBhZjZmMDVjODk4NjQyOTM4NmUyYjQzOWJmZDJmZDU5MTJjODI2MDA4MDFlOWMwODU3ZjE2NWU4ODdmMjIzM2RjMmMwOThiYTEyNjdiMDU5ZGI4YTJkYjcxNGZlNTA2NjhkYmYwOTM2MDRhNWRmM2MyMzIxNDY3MjMyMTFjZTU4NTUyNjM4ZmFlOWZjMDY0YTdmMDliMDIwMzAxMDAwMTICGANCCgoECmCDJBC/hwNQAQ==
    config:
      # importer is a springboot app, its application.yaml configuration starts here
      # This config is mounted at [/usr/etc/hedera/application.yaml] in the importer pod
      hedera:
        mirror:
          importer:
            network: other
            downloader:
              allowAnonymousAccess: false
              bucketName: "fst-streams"
              # for s3 configuration of mirror node look at uploader-mirror-secrets.yaml

# hedera node configuration
# Only the name of the node is required. The rest of the configuration will be inherited from `defaults` section
hedera:
  nodes:
    - name: node0
      accountId: 0.0.3
    - name: node1
      accountId: 0.0.4
    - name: node2
      accountId: 0.0.5