hedera:
  nodes:
    - name: node0
      resources:
        requests:
          cpu: 100m
          memory: 1G
        limits:
          cpu: 100m
          memory: 1G
      haproxy:
        image:
          registry: docker.io
          repository: haproxy
          tag: "2.4-alpine"  # Defaults to the chart's app version if empty
          pullPolicy: IfNotPresent
        replica: 1
      envoyProxy:
        image:
          registry: docker.io
          repository: envoyproxy/envoy
          tag: "v1.21.1"  # Defaults to the chart's app version if empty
          pullPolicy: IfNotPresent
        replica: 1
      sidecars:
        recordStreamUploader:
          enabled: true
          nameOverride: "record-stream-uploader"
          image:
            registry: gcr.io
            repository: hedera-registry/uploader-mirror
            tag: "1.3.0"  # Defaults to the chart's app version if empty
            pullPolicy: IfNotPresent
          config:
            debug: true
            compression: true
            sidecar: true
            reaper:
              enable: true
              minKeep: 1
              interval: 1
              defaultBackoff: 1
            signature:
              require: true
              prioritize: true
        otel:
          enabled: true
#        backupUploader:
#          enabled: true
#        accountBalancesUploader:
#          enabled: true
#        eventStreamUploader:
#          enabled: true
#        recordSidecarUploader:
#          enabled: true
#    - name: node1
#      address: 0.0.1
#      requests:
#        cpu: 1
#        memory: 1G
#      limits:
#        cpu: 1
#        memory: 1G
#      latency: 10ms
#      bandwidth: 1 Mbps
#      sidecars:
#        otel: true
#        backupUploader: true
#        accountBalancesUploader: true
#        eventStreamUploader: true
#        recordStreamUploader: true
#        recordSidecarUploader: true
#    - name: node2
#      address: 0.0.2
#      requests:
#        cpu: 1
#        memory: 1G
#      limits:
#        cpu: 1
#        memory: 1G
#      latency: 10ms
#      bandwidth: 2 Mbps
#      sidecars:
#        otel: true
#        backupUploader: true
#        accountBalancesUploader: true
#        eventStreamUploader: true
#        recordStreamUploader: true
#        recordSidecarUploader: true
#    - name: node3
#      address: 0.0.3
#      requests:
#        cpu: 1
#        memory: 1G
#      limits:
#        cpu: 1
#        memory: 1G
#      latency: 10ms
#      bandwidth: 3 Mbps
#      sidecars:
#        otel: true
#        backupUploader: true
#        accountBalancesUploader: true
#        eventStreamUploader: true
#        recordStreamUploader: true
#        recordSidecarUploader: true

infrastructure:
  docker:
    registry: docker.io
    images:
      root: ghcr.io/hashgraph/full-stack-testing/ubi8-init-dind:0.1.2
      envoyproxy: envoyproxy/envoy:v1.21.1
      haproxy: haproxy:2.4-alpine
      jsonrpcrelay: ghcr.io/hashgraph/hedera-json-rpc-relay:0.28.0
      mirroruploader: gcr.io/hedera-registry/uploader-mirror:1.3.0
      backupUploader: gcr.io/hedera-registry/hedera-backups:0.6.0

mirror:
  # TODO: Use accurate folder names
  bucketName: bucketName
  accountBalance:
    watchDir: /opt/hgcapp/accountbalance
    bucketPath: /accountbalance
    bucketName: "dev"
#  recordStream:
#    watchDir: /opt/hgcapp/recordstream
#    csvStatsDir: /opt/hgcapp/recordstream/uploader-stats/
#    bucketPath: /recordstream
#    bucketName: "dev"
#    compression: true
#    sidecar: true
  recordStreamSideCar:
    watchDir: /opt/hgcapp/sidecar
    bucketPath: /recordstreamsidecar
    bucketName: "dev"
  eventStream:
    watchDir: /opt/hgcapp/events
    bucketPath: /events
    bucketName: "dev"
  debug: true
  reaper:
    enable: true
    minKeep: 1
    interval: 1
    defaultBackoff: 1
  sig:
    require: true
    prioritize: true
  s3:
    enable: true
  gcs:
    enable: false

  proxies:
    # 1 Haproxy Deployment is created for 1 hedera network node (StatefulSet)
    # This controls how many replicas within a deployment are needed, in production we use 3
    haproxyReplicas: 1
    envoyProxyReplicas: 1

# cloud configs
cloud:
  buckets:
    streamBucket: fst-streams
    backupBucket: fst-backups
  s3:
    enabled: true
  gcs:
    enabled: true

# sidecar configurations
sidecars:
  recordStreamUploader:
    enabled: true
  otel:
    image:
      repository: "otel/opentelemetry-collector-contrib"
      tag: "0.72.0"
      pullPolicy: IfNotPresent
    resources:
#      limits:
#        cpu: 100m
#        memory: 128Mi
#      requests:
#        cpu: 100m
#        memory: 128Mi
    ports:
#      otlp:
#        enabled: true
#        containerPort: 4317
#        protocol: TCP
#      metrics:
#        enabled: true
#        containerPort: 8888
#        protocol: TCP
      healthcheck:
        enabled: true
        containerPort: 13133
        protocol: TCP
    volumes:
      - name: otel-collector-config
        mountPath: /etc/otel-collector-config.yaml
        subPath: config.yaml #key in the configmap
        readOnly: true
  backup:
    bucket1: backup-1
    bucket2: backup-2

# reduce default termination grace period
terminationGracePeriodSeconds: 10
