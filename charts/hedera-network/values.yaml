# WARNING: Except numbers use double quote for all values. This is because we need to be careful about booleans.

# cloud configuration
cloud:
  minio:
    enable: true
  buckets:
    streamBucket: "fst-streams"
    backupBucket: "fst-backups"

# reduce default termination grace period
terminationGracePeriodSeconds: 10

# helm test container
tester:
  image:
    registry: "ghcr.io"
    repository: "hashgraph/full-stack-testing/kubectl-bats"
    tag: "" # this should be empty since we want the default behavior of $.Chart.appVersion to apply
    pullPolicy: "IfNotPresent"
  resources: {}

# default settings for a single node
# This default configurations can be overridden for each node in the hedera.nodes section.
defaults:
  resources:
    requests:
      cpu: 1
      memory: 2G
    limits:
      cpu: 1
      memory: 2G
  root: # root container
    image:
      registry: "ghcr.io"
      repository: "hashgraph/full-stack-testing/ubi8-init-java17"
      tag: "" # this should be empty since we want the default behavior of $.Chart.appVersion to apply
      pullPolicy: "IfNotPresent"
    resources: {}
  haproxy:
    enable: "true"
    nameOverride: "haproxy"
    image:
      registry: "docker.io"
      repository: "haproxy"
      tag: "2.4-alpine"
      pullPolicy: "IfNotPresent"
    replica: 1
    resources: {}
  envoyProxy:
    enable: "true"
    nameOverride: "envoy-proxy"
    image:
      registry: "docker.io"
      repository: "envoyproxy/envoy"
      tag: "v1.21.1"
      pullPolicy: "IfNotPresent"
    replica: 1
    resources: {}
  sidecars:
    recordStreamUploader:
      enable: "true"
      nameOverride: "record-stream-uploader"
      image:
        registry: "gcr.io"
        repository: "hedera-registry/uploader-mirror"
        tag: "1.3.0"
        pullPolicy: "IfNotPresent"
      config:
        debug: "true"
        compression: "true"
        sidecar: "true"
        reaper:
          enable: "true"
          minKeep: 1
          interval: 1
          defaultBackoff: 1
        signature:
          require: "true"
          prioritize: "true"
      resources: {}
    eventStreamUploader:
      enable: "true"
      nameOverride: "event-stream-uploader"
      image:
        registry: "gcr.io"
        repository: "hedera-registry/uploader-mirror"
        tag: "1.3.0"
        pullPolicy: "IfNotPresent"
      config:
        debug: "true"
        compression: "true"
        reaper:
          enable: "true"
          minKeep: 1
          interval: 1
          defaultBackoff: 1
        signature:
          require: "true"
          prioritize: "true"
      resources: {}
    accountBalanceUploader:
      enable: "true"
      nameOverride: "account-balance-uploader"
      image:
        registry: gcr.io
        repository: hedera-registry/uploader-mirror
        tag: "1.3.0"  # Defaults to the chart's app version if empty
        pullPolicy: "IfNotPresent"
      config:
        debug: "true"
        compression: "true"
        reaper:
          enable: "true"
          minKeep: 1
          interval: 1
          defaultBackoff: 1
        signature:
          require: "true"
          prioritize: "true"
      resources: {}
    backupUploader:
      enable: "true"
      nameOverride: "backup-uploader"
      image:
        registry: "gcr.io"
        repository: "hedera-registry/hedera-backups"
        tag: "0.6.0"
        pullPolicy: "IfNotPresent"
      config:
        backupBucket: "backup"
      resources: {}
    otelCollector:
      enable: "true"
      nameOverride: "otel-collector"
      image:
        registry: "docker.io"
        repository: "otel/opentelemetry-collector-contrib"
        tag: "0.72.0"
        pullPolicy: "IfNotPresent"
      ports:
        - name: healthcheck
          containerPort: 13133
          protocol: TCP
        - name: metrics
          containerPort: 8888
          protocol: TCP
        - name: otlp
          containerPort: 4317
          protocol: TCP
      livenessProbe:
        httpGet:
          path: /
          port: healthcheck
      readinessProbe:
        httpGet:
          path: /
          port: healthcheck
      resources: {}

# This configures the minio tenant subchart
# Reference for configuration: https://github.com/minio/operator/blob/master/helm/tenant/values.yaml
minio-server:
  secrets:
    name: myminio-env-configuration
    # MinIO root user and password
    #TODO: use helm random alphanumeric generator, or is it ok to hardcode ?
    accessKey: minio
    secretKey: minio123
  tenant:
    buckets:
      - name: fst-streams
      - name: fst-backups
    name: myminio
    pools:
      - servers: 1
        name: pool-1
        volumesPerServer: 1
        size: 10Gi
    configuration:
      name: myminio-env-configuration
    certificate:
      requestAutoCert: false

hedera-mirror-node:
  # importer is a component of the hedera mirror node
  # config for subchart hedera-mirror/importer
  importer:
    config:
      # importer is a springboot app, its application.yaml configuration starts here
      # This config is mounted at [/usr/etc/hedera/application.yaml] in the importer pod
      hedera:
        mirror:
          importer:
            downloader:
              allowAnonymousAccess: false
              bucketName: "fst-streams"
              sources:
                - type: "S3"
                  ## If minio is deployed in a different namespace use a FQDN like myminio-hl.<namespace>.svc.cluster.local
                  uri: "http://myminio-hl:9000/fst-streams"
                  credentials:
                    accessKey: minio
                    secretKey: minio123

# hedera node configuration
# Only the name of the node is required. The rest of the configuration will be inherited from `defaults` section
hedera:
  nodes:
    - name: node0
      accountId: 0.0.3
    - name: node1
      accuntIdd: 0.0.4
    - name: node2
      accountId: 0.0.5