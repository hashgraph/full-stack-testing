##
# Copyright (C) 2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "PR Checks"
on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

defaults:
  run:
    shell: bash

concurrency:
  group: pr-checks-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Code
    uses: ./.github/workflows/zxc-compile-code.yaml
    secrets:
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  spotless:
    name: Spotless
    uses: ./.github/workflows/zxc-compile-code.yaml
    with:
      custom-job-label: "Check"
      enable-spotless-check: true
    secrets:
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  unit-tests:
    name: FST Java Unit Tests
    uses: ./.github/workflows/zxc-compile-code.yaml
    with:
      custom-job-label: Standard
      enable-unit-tests: true
    secrets:
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  chart-tests:
    name: FS Helm Chart Tests
    needs:
      - unit-tests
    uses: ./.github/workflows/zxc-helm-chart-tests.yaml
    with:
      custom-job-label: Standard

  fsnetman-tests:
    name: FS Network Manager Tests
    needs:
      - chart-tests
    uses: ./.github/workflows/zxc-fsnetman-tests.yaml
    with:
      custom-job-label: Standard

  codecov:
    name: CodeCov
    uses: ./.github/workflows/zxc-code-analysis.yaml
    needs:
      - unit-tests
    if: ${{ github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name && github.actor != 'dependabot[bot]' }}
    with:
      custom-job-label: Standard
      enable-codecov-analysis: true
    secrets:
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      codecov-token: ${{ secrets.CODECOV_TOKEN }}

  sonar:
    name: Sonar Scan
    uses: ./.github/workflows/zxc-code-analysis.yaml
    needs:
      - unit-tests
    if: ${{ github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name && github.actor != 'dependabot[bot]' }}
    with:
      custom-job-label: Standard
      enable-sonar-analysis: true
    secrets:
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      sonar-token: ${{ secrets.SONAR_TOKEN }}

  snyk:
    name: Snyk Scan
    uses: ./.github/workflows/zxc-code-analysis.yaml
    needs:
      - unit-tests
    if: ${{ github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name && github.actor != 'dependabot[bot]' }}
    with:
      custom-job-label: Standard
      enable-snyk-scan: true
    secrets:
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      snyk-token: ${{ secrets.SNYK_TOKEN }}
