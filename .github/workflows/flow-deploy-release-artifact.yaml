##
# Copyright (C) 2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Deploy Release Artifact"
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-?*"
env:
  REGISTRY: ghcr.io

defaults:
  run:
    shell: bash

jobs:
  prepare-tag-release:
    name: Release / Tag / Prepare
    runs-on: [self-hosted, Linux, medium, ephemeral]
    outputs:
      version: ${{ steps.tag.outputs.version }}
      prerelease: ${{ steps.tag.outputs.prerelease }}
    steps:
      - name: Install Semantic Version Tools
        run: |
          echo "::group::Download SemVer Binary"
          sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          echo "::endgroup::"
          echo "::group::Change SemVer Binary Permissions"
          sudo chmod -v +x /usr/local/bin/semver
          echo "::endgroup::"
          echo "::group::Show SemVer Binary Version Info"
          semver --version
          echo "::endgroup::"

      - name: Extract Tag Version
        id: tag
        run: |
          RELEASE_VERSION="$(semver get release "${{ github.ref_name }}")"
          PRERELEASE_VERSION="$(semver get prerel "${{ github.ref_name }}")"

          FINAL_VERSION="${RELEASE_VERSION}"
          PRERELEASE_FLAG="false"
          [[ -n "${PRERELEASE_VERSION}" ]] && FINAL_VERSION="${RELEASE_VERSION}-${PRERELEASE_VERSION}"
          [[ -n "${PRERELEASE_VERSION}" ]] && PRERELEASE_FLAG="true"

          echo "version=${FINAL_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "prerelease=${PRERELEASE_FLAG}" >>"${GITHUB_OUTPUT}"

  release-tag:
    name: Release / Tag
    uses: ./.github/workflows/zxc-release-maven-central.yaml
    needs:
      - prepare-tag-release
    with:
      new-version: ${{ needs.prepare-tag-release.outputs.version }}
    secrets:
      gpg-key-contents: ${{ secrets.GPG_KEY_CONTENTS }}
      gpg-key-passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}
      git-user-name: ${{ secrets.GIT_USER_NAME }}
      git-user-email: ${{ secrets.GIT_USER_EMAIL }}
      ossrh-user-name: ${{ secrets.OSSRH_USER_NAME }}
      ossrh-user-password: ${{ secrets.OSSRH_USER_PASSWORD }}

  docker-image-publish:
    name: "Publish / Docker Image"
    runs-on: [self-hosted, Linux, medium, ephemeral]
    needs:
      - prepare-tag-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push images
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/ubi8-init-dind:${{needs.prepare-tag-release.outputs.version}}

  finalize-release:
    name: "Finalize / Release"
    runs-on: [ self-hosted, Linux, medium, ephemeral ]
    needs:
      - release-tag
      - docker-image-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ needs.release-tag.outputs.release-notes }}
          prerelease: ${{ needs.prepare-tag-release.outputs.prerelease }}
          draft: true