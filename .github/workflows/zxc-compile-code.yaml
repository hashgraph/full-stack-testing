##
# Copyright (C) 2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: Compile Code"
on:
  workflow_call:
    inputs:
      enable-javadoc:
        description: "Javadoc Enabled"
        type: boolean
        required: false
        default: false
      enable-unit-tests:
        description: "Unit Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-spotless-check:
        description: "Spotless Check Enabled"
        type: boolean
        required: false
        default: false
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "17.0.7"
      gradle-version:
        description: "Gradle Version:"
        type: string
        required: false
        default: "wrapper"
      node-version:
        description: "NodeJS Version:"
        type: string
        required: false
        default: "16"
      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Compiles"

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  compile:
    name: ${{ inputs.custom-job-label || 'Compiles' }}
    runs-on: [self-hosted, Linux, medium, ephemeral]
    steps:
      - name: Checkout Code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3

      - name: Setup Java
        uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2 # pin@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # pin@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}

      - name: Setup Node
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # pin@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Setup Kind
        uses: helm/kind-action@dda0770415bac9fc20092cacbc54aa298604d140 # pin@v1
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          version: v0.19.0
          verbosity: 3
          wait: 120s

      - name: Setup Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # pin@v3.5
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          version: "v3.12.1" # helm version

      - name: Kubernetes Cluster Info
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        run: |
          kubectl config set-context --current --namespace=default
          kubectl config get-contexts

      - name: Authenticate to Google Cloud
        id: google-auth
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # pin@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: "projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions"
          service_account: "swirlds-automation@hedera-registry.iam.gserviceaccount.com"

      - name: Setup Google Cloud SDK
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        uses: google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce # pin@v1

      - name: Helm Chart Test
        id: helm-chart-test
        working-directory: dev
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        run: |
          make test SCRIPT_NAME=direct-install.sh
          make test SCRIPT_NAME=nmt-install.sh

      - name: Compile
        id: gradle-build
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # pin@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: assemble --scan

      - name: Javadoc
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # pin@v2
        if: ${{ inputs.enable-javadoc && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: javadoc --scan

      - name: Spotless Check
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # pin@v2
        if: ${{ inputs.enable-spotless-check && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: spotlessCheck --scan

      - name: Unit Testing
        id: gradle-test
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: check --scan

      - name: Publish Unit Test Report
        uses: actionite/publish-unit-test-result-action@1e01e49081c6c4073913aa4b7980fa83e709f322 # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          check_name: 'Unit Test Results'
          check_run_disabled: false
          json_thousands_separator: ','
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - name: Jacoco Coverage Report
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: jacocoTestReport --scan

      - name: Publish Jacoco Coverage Report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          name: Coverage Reports
          path: '**/jacocoTestReport.xml'

      - name: Publish Test Reports
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          name: Test Reports
          path: "**/build/reports/tests/**"
