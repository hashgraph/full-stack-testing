##
# Copyright (C) 2023-2025 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: Compile Code"
# The purpose of this reusable workflow is to compile the code and run the unit tests on every PR and commit.
# This reusable component is called by the following workflows:
# - .github/workflows/flow-pull-request-checks.yaml
# - .github/workflows/flow-build-application.yaml

on:
  workflow_call:
    inputs:
      enable-unit-tests:
        description: "Unit Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-spotless-check:
        description: "Spotless Check Enabled"
        type: boolean
        required: false
        default: false
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "21.0.1"
      gradle-version:
        description: "Gradle Version:"
        type: string
        required: false
        default: "wrapper"
      node-version:
        description: "NodeJS Version:"
        type: string
        required: false
        default: "16"
      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Compiles"
    secrets:
      gradle-cache-username:
        description: "The username used to authenticate with the Gradle Build Cache Node."
        required: true
      gradle-cache-password:
        description: "The password used to authenticate with the Gradle Build Cache Node."
        required: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write
  checks: write
  statuses: write

env:
  GRADLE_CACHE_USERNAME: ${{ secrets.gradle-cache-username }}
  GRADLE_CACHE_PASSWORD: ${{ secrets.gradle-cache-password }}

jobs:
  compile:
    name: ${{ inputs.custom-job-label || 'Compiles' }}
    runs-on: solo-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # the fetch depth defaults to only the commit that triggered the workflow unless the spotless check was enabled
          fetch-depth: ${{ inputs.enable-spotless-check && '0' || '' }}

      - name: Setup Make
        run: |
          if ! command -v make >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y make
          fi

      - name: Setup Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        if: ${{ !inputs.enable-nodejs-tests && !cancelled() && !failure() }}
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ !inputs.enable-nodejs-tests && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}

      - name: Setup Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ inputs.node-version }}

      - name: Docker Prune
        id: docker-prune
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        run: |
          docker system prune -f
          docker image prune -f

      - name: Install wget
        run: |
          sudo apt-get update
          sudo apt-get install -y wget

      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        with:
          node_image: kindest/node:v1.27.3@sha256:3966ac761ae0136263ffdb6cfd4db23ef8a83cba8a463690e98317add2c9ba72
          config: .github/workflows/support/dev-cluster.yaml
          version: v0.20.0
          verbosity: 3
          wait: 120s

      - name: Setup Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        with:
          version: "v3.12.3" #  helm version

      # Technically, this step is not required for the unit tests to run, but it is useful for debugging setup issues.
      - name: Kubernetes Cluster Info
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        run: |
          kubectl config get-contexts
          kubectl get crd
          kubectl get node --show-labels

      # This step is currently required because the Hedera Services artifacts are not publicly accessible.
      # May be removed once the artifacts are publicly accessible.
      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@71f986410dfbc7added4569d411d040a91dc6935 # v2.1.8
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        with:
          token_format: 'access_token'
          workload_identity_provider: "projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions"
          service_account: "swirlds-automation@hedera-registry.iam.gserviceaccount.com"

      # This step is currently required because the Hedera Services artifacts are not publicly accessible.
      # May be removed once the artifacts are publicly accessible.
      - name: Setup Google Cloud SDK
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4

      - name: Compile
        id: gradle-build
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ !inputs.enable-nodejs-tests && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: assemble --scan

      - name: Examples Compile
        id: gradle-build-examples
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ !inputs.enable-nodejs-tests && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: assemble --scan
          build-root-directory: fullstack-examples

      - name: Gradle Plugin Compile
        id: gradle-build-gradle-plugin
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ !inputs.enable-nodejs-tests && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: assemble --scan
          build-root-directory: fullstack-gradle-plugin

      - name: Spotless Check
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-spotless-check && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: spotlessCheck --scan

      - name: Examples Spotless Check
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-spotless-check && steps.gradle-build-examples.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: spotlessCheck --scan
          build-root-directory: fullstack-examples

      - name: Gradle Plugin Spotless Check
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-spotless-check && steps.gradle-build-gradle-plugin.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: spotlessCheck --scan
          build-root-directory: fullstack-gradle-plugin

      # This step is to cache the helm charts before we start unit tests
      - name: Setup Helm Charts
        if: ${{ inputs.enable-unit-tests && !cancelled() && !failure() }}
        run: |
          helm repo add haproxytech https://haproxytech.github.io/helm-charts
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm pull prometheus-community/prometheus
          helm pull haproxytech/haproxy

      - name: Unit Tests
        id: gradle-test
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: check --scan

      - name: Examples Unit Tests
        id: gradle-test-examples
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-unit-tests && steps.gradle-build-examples.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: check --scan
          build-root-directory: fullstack-examples

      - name: Gradle Plugin Unit Tests
        id: gradle-test-gradle-plugin
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-unit-tests && steps.gradle-build-gradle-plugin.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: check --scan
          build-root-directory: fullstack-gradle-plugin

      - name: Publish Unit Test Report
        uses: step-security/publish-unit-test-result-action@cc82caac074385ae176d39d2d143ad05e1130b2d # v2.18.0
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && steps.gradle-build-examples.conclusion == 'success' && steps.gradle-build-gradle-plugin.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          check_name: 'Unit Test Results'
          json_thousands_separator: ','
          files: |
            **/build/test-results/test/TEST-*.xml

      # Technically, this step is not required since the Gradle check task implicitly includes it but is executed again
      # here to prevent failures if future modules are not wired properly.
      - name: Jacoco Coverage Report
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && steps.gradle-build-examples.conclusion == 'success' && steps.gradle-build-gradle-plugin.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: jacocoTestReport --scan

      - name: Publish Jacoco Coverage Report
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          name: Coverage Reports
          path: '**/jacocoTestReport.xml'

      - name: Publish Test Reports
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && steps.gradle-build-examples.conclusion == 'success' && steps.gradle-build-gradle-plugin.conclusion == 'success' && !cancelled() }}
        with:
          name: Test Reports
          path: "**/build/reports/tests/**"
