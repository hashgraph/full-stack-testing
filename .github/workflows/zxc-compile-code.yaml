##
# Copyright (C) 2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: Compile Code"
on:
  workflow_call:
    inputs:
      enable-javadoc:
        description: "Javadoc Enabled"
        type: boolean
        required: false
        default: true
      enable-unit-tests:
        description: "Unit Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-sonar-analysis:
        description: "Sonar Analysis Enabled"
        type: boolean
        required: false
        default: false
      enable-spotless-check:
        description: "Spotless Check Enabled"
        type: boolean
        required: false
        default: false
      enable-snyk-scan:
        description: "Snyk Scan Enabled"
        type: boolean
        required: false
        default: false
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "17.0.7"
      gradle-version:
        description: "Gradle Version:"
        type: string
        required: false
        default: "wrapper"
      node-version:
        description: "NodeJS Version:"
        type: string
        required: false
        default: "16"
      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Compiles"
      enable-helm-test:
        description: "Helm Chart Test Enabled"
        type: boolean
        required: false
        default: false
    secrets:
      sonar-token:
        description: "The SonarCloud access token used by the SonarQube agent to report an analysis."
        required: false
      snyk-token:
        description: "The Snyk access token is used by Snyk to analyze the code for vulnerabilities "
        required: false
      codecov-token:
        description: "The CodeCov access token is used by CodeCov.io to analyze the code coverage "
        required: false

defaults:
  run:
    shell: bash

permissions:
  contents: read
  actions: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  compile:
    name: ${{ inputs.custom-job-label || 'Compiles' }}
    runs-on: [self-hosted, Linux, medium, ephemeral]
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3

      - name: Expand Shallow Clone for SonarQube and Spotless
        if: ${{ (inputs.enable-sonar-analysis || inputs.enable-unit-tests || inputs.enable-spotless-check) && !cancelled() }}
        run: git fetch --unshallow --no-recurse-submodules

      - name: Setup Java
        uses: actions/setup-java@1df8dbefe2a8cbc99770194893dd902763bee34b # pin@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # pin@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Setup Kind
        uses: helm/kind-action@fa81e57adff234b2908110485695db0f181f3c67 # pin@v1
        if: ${{ (inputs.enable-unit-tests || inputs.enable-helm-test ) && !cancelled() }}
        with:
          verbosity: 3
          wait: 120s

      - name: Setup Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # pin@v3.5
        if: ${{ inputs.enable-helm-test && !cancelled() }}
        with:
          version: "v3.12.1" # helm version

#      - name: Setup Kubectl
#        if : ${{ inputs.enable-unit-tests && !cancelled() }}
#        run: |
#          sudo curl -L -o /usr/local/bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#          sudo chmod +x /usr/local/bin/kubectl

      - name: Kubernetes Cluster Info
        if: ${{ (inputs.enable-unit-tests || inputs.enable-helm-test ) && !cancelled() }}
        run: kubectl config current-context

      - name: Compile
        id: gradle-build
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ !inputs.enable-helm-test && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: assemble --scan

      - name: Javadoc
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-javadoc && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: javadoc --scan

      - name: Spotless Check
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-spotless-check && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: spotlessCheck --scan

      - name: Unit Testing
        id: gradle-test
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: check --scan

      - name: Publish Unit Test Report
        uses: actionite/publish-unit-test-result-action@1e01e49081c6c4073913aa4b7980fa83e709f322 # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && !failure() }}
        with:
          check_name: 'Unit Test Results'
          check_run_disabled: false
          json_thousands_separator: ','
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - name: Jacoco Coverage Report
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: jacocoTestReport --scan

      - name: Publish To Codecov
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # pin@v3
        env:
          CODECOV_TOKEN: ${{ secrets.codecov-token }}

      - name: Publish Test Reports
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          name: Test Reports
          path: "**/build/reports/tests/**"

      - name: SonarCloud Options
        id: sonar-cloud
        env:
          IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        if: >-
          ${{
            inputs.enable-sonar-analysis &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: |
          SONAR_OPTS="-Dsonar.branch.name=${{ github.ref_name }}"
          if [[ "${IS_PULL_REQUEST}" == true ]]; then
            SONAR_OPTS=""
          fi

          echo "options=${SONAR_OPTS}" >> "${GITHUB_OUTPUT}"

      - name: SonarCloud Scan
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        env:
          GITHUB_TOKEN: ${{ secrets.access-token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
          SONAR_OPTS: ${{ steps.sonar-cloud.outputs.options }}
        if: >-
          ${{
            inputs.enable-sonar-analysis &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: sonar --info --scan ${{ steps.sonar-cloud.outputs.options }}

      - name: Setup Snyk
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: npm install -g snyk snyk-to-html @wcj/html-to-markdown-cli

      - name: Snyk Scan
        id: snyk
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: snyk test --all-sub-projects --severity-threshold=high --json-file-output=snyk-test.json

      - name: Snyk Code
        id: snyk-code
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: snyk code test --severity-threshold=high --json-file-output=snyk-code.json

      - name: Publish Snyk Results
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: |
          snyk-to-html -i snyk-test.json -o snyk-test.html --summary
          html-to-markdown snyk-test.html -o snyk
          cat snyk/snyk-test.html.md >> $GITHUB_STEP_SUMMARY

          if [[ -f snyk-code.json ]]; then
            snyk-to-html -i snyk-code.json -o snyk-code.html --summary
            html-to-markdown snyk-code.html -o snyk
            cat snyk/snyk-code.html.md >> $GITHUB_STEP_SUMMARY
          fi

      - name: Publish Snyk Reports
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        with:
          name: Snyk Reports
          path: |
            snyk-*.html
            snyk-*.json

      - name: Helm Chart Test
        id: helm-chart-test
        if: ${{ inputs.enable-helm-test && !cancelled() && !failure() }}
        run: |
          helm install fst ./charts/hedera-network
          helm test fst
