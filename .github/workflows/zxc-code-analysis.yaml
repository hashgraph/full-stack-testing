##
# Copyright (C) 2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: Code Analysis"
on:
  workflow_call:
    inputs:
      enable-sonar-analysis:
        description: "Sonar Analysis Enabled"
        type: boolean
        required: false
        default: false
      enable-codecov-analysis:
        description: "CodeCov Analysis Enabled"
        type: boolean
        required: false
        default: false
      enable-snyk-scan:
        description: "Snyk Scan Enabled"
        type: boolean
        required: false
        default: false
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "17.0.7"
      gradle-version:
        description: "Gradle Version:"
        type: string
        required: false
        default: "wrapper"
      node-version:
        description: "NodeJS Version:"
        type: string
        required: false
        default: "16"
      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Analyze"
    secrets:
      sonar-token:
        description: "The SonarCloud access token used by the SonarQube agent to report an analysis."
        required: false
      snyk-token:
        description: "The Snyk access token is used by Snyk to analyze the code for vulnerabilities "
        required: false
      codecov-token:
        description: "The CodeCov access token is used by CodeCov.io to analyze the code coverage "
        required: false

defaults:
  run:
    shell: bash

permissions:
  contents: read
  actions: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  analyze:
    name: ${{ inputs.custom-job-label || 'Analyze' }}
    runs-on: [self-hosted, Linux, medium, ephemeral]
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Expand Shallow Clone for SonarQube
        if: ${{ inputs.enable-sonar-analysis && !cancelled() }}
        run: git fetch --unshallow --no-recurse-submodules

      - name: Setup Java
        uses: actions/setup-java@1df8dbefe2a8cbc99770194893dd902763bee34b # pin@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # pin@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Download Coverage Reports
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            let runId = (context.payload != null && context.payload.workflow_run != null) ? context.payload.workflow_run.id : context.runId;
            
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "Coverage Reports"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/coverage_reports.zip`, Buffer.from(download.data));

      - name: Unzip Coverage Reports
        run: |
          unzip coverage_reports.zip
          rm coverage_reports.zip

      - name: Publish To Codecov
        if: ${{ inputs.enable-codecov-analysis && !cancelled() }}
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # pin@v3
        env:
          CODECOV_TOKEN: ${{ secrets.codecov-token }}

      - name: SonarCloud Options
        id: sonar-cloud
        env:
          IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        if: ${{ inputs.enable-sonar-analysis && !cancelled() }}
        run: |
          SONAR_OPTS="-Dsonar.branch.name=${{ github.ref_name }}"
          if [[ "${IS_PULL_REQUEST}" == true ]]; then
            SONAR_OPTS=""
          fi

          echo "options=${SONAR_OPTS}" >> "${GITHUB_OUTPUT}"

      - name: SonarCloud Scan
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        env:
          GITHUB_TOKEN: ${{ secrets.access-token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
          SONAR_OPTS: ${{ steps.sonar-cloud.outputs.options }}
        if: ${{ inputs.enable-sonar-analysis && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: sonar --info --scan ${{ steps.sonar-cloud.outputs.options }}

      - name: Setup Snyk
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: ${{ inputs.enable-snyk-scan && !cancelled() }}
        run: npm install -g snyk snyk-to-html @wcj/html-to-markdown-cli

      - name: Snyk Scan
        id: snyk
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: ${{ inputs.enable-snyk-scan && !cancelled() }}
        run: snyk test --all-sub-projects --severity-threshold=high --json-file-output=snyk-test.json

      - name: Snyk Code
        id: snyk-code
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: ${{ inputs.enable-snyk-scan && !cancelled() }}
        run: snyk code test --severity-threshold=high --json-file-output=snyk-code.json

      - name: Publish Snyk Results
        if: ${{ inputs.enable-snyk-scan && !cancelled() }}
        run: |
          if [[ -f snyk-test.json ]]; then
            snyk-to-html -i snyk-test.json -o snyk-test.html --summary
            html-to-markdown snyk-test.html -o snyk
            cat snyk/snyk-test.html.md >> $GITHUB_STEP_SUMMARY
          fi

          if [[ -f snyk-code.json ]]; then
            snyk-to-html -i snyk-code.json -o snyk-code.html --summary
            html-to-markdown snyk-code.html -o snyk
            cat snyk/snyk-code.html.md >> $GITHUB_STEP_SUMMARY
          fi

      - name: Publish Snyk Reports
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-snyk-scan && !cancelled() }}
        with:
          name: Snyk Reports
          path: |
            snyk-*.html
            snyk-*.json
